#!/bin/bash

# Usage: git-rebase-onto[remote_branch]
# Example: git-rebase-onto prod

# Set default remote branch to origin/master if not provided

# Check if we are in a git repo
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå Not a git repository. Please run this inside a git repo."
    exit 1
fi

## Main Branch
REMOTE_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')

# Fetch latest from remote
echo "üì• Fetching latest changes from main branch - '$REMOTE_BRANCH'"
git fetch origin $REMOTE_BRANCH

# Show current branch
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
echo "üîÄ Rebasing branch '$CURRENT_BRANCH' onto '$REMOTE_BRANCH'..."

# Rebase current branch onto the target
git pull --rebase origin $REMOTE_BRANCH

# Check status
if [ $? -eq 0 ]; then
    echo "‚úÖ Rebase completed successfully."
else
    echo "‚ö†Ô∏è Rebase encountered conflicts. Please resolve them and run 'git rebase --continue'."
    exit 1
fi